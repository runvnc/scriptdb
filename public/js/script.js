// Generated by CoffeeScript 1.4.0
(function() {
  var AddTitleCntl, DashCntl, ProductTypeCntl, mod, viewMod;

  window.MainCntl = function($scope, $route, $routeParams, $location, $http) {
    $scope.$route = $route;
    $scope.$location = $location;
    $scope.$routeParams = $routeParams;
    return $scope.setLocation = function(url) {
      return $scope.$location.path(url);
    };
  };

  DashCntl = function($scope, $routeParams, $resource) {
    $scope.$resource = $resource;
    $scope.name = "DashCntl";
    return $scope.params = $routeParams;
  };

  AddTitleCntl = function($scope, $routeParams) {
    $scope.name = "AddTitleCntl";
    return $scope.params = $routeParams;
  };

  ProductTypeCntl = function($scope, $routeParams) {
    $scope.name = "ProductTypeCntl";
    return $scope.params = $routeParams;
  };

  mod = function($routeProvider, $locationProvider) {
    $routeProvider.when("/dash", {
      templateUrl: "/dash.html",
      controller: DashCntl
    });
    $routeProvider.when("/addtitle", {
      templateUrl: "/addtitle.html",
      controller: AddTitleCntl
    });
    $routeProvider.when("/Catalog/:type", {
      templateUrl: "/products.html",
      controller: ProductTypeCntl
    });
    return $locationProvider.html5Mode(true);
  };

  viewMod = angular.module("ngView", ["ngResource"], mod);

  viewMod.directive("feed", function($resource) {
    return {
      restrict: "E",
      replace: true,
      transclude: false,
      template: "<li ng-repeat=\"article in articles\"><a href=\"{{article.link}}\" target=\"_blank\" >{{article.title}}</a></li>",
      link: function(scope, element, attrs) {
        var Feed;
        console.log(attrs.url);
        Feed = $resource("/feed/" + encodeURIComponent(attrs.url));
        return scope.articles = Feed.query({}, function() {});
      }
    };
  });

  viewMod.directive("upcoming", function($resource) {
    return {
      restrict: "E",
      replace: true,
      transclude: false,
      template: "<li ng-repeat=\"ev in evts\">{{ev.date}} {{ev.title}}</li>",
      link: function(scope, element, attrs) {
        var Upcoming;
        Upcoming = $resource("/upcoming");
        return scope.evts = Upcoming.query({
          blah: 'hello'
        }, function() {});
      }
    };
  });

  viewMod.directive("productList", function($resource) {
    return {
      restrict: "E",
      replace: true,
      transclude: true,
      template: "<li ng-repeat=\"product in products\">{{product.name}} {{product.price}}</li>",
      link: function(scope, element, attrs) {
        var Product;
        Product = $resource("/products");
        return scope.products = Product.query({
          type: scope.params.type
        }, function() {});
      }
    };
  });

  viewMod.directive('tabs', function() {
    return {
      restrict: 'E',
      transclude: true,
      scope: {},
      controller: function($scope, $element) {
        var panes;
        panes = $scope.panes = [];
        $scope.select = function(pane) {
          var p, _i, _len;
          for (_i = 0, _len = panes.length; _i < _len; _i++) {
            p = panes[_i];
            p.selected = false;
          }
          return pane.selected = true;
        };
        return this.addPane = function(pane) {
          if (panes.length === 0) {
            $scope.select(pane);
          }
          return panes.push(pane);
        };
      },
      template: "<div class=\"tabbable\">\n  <ul class=\"nav nav-tabs\">\n    <li ng-repeat=\"pane in panes\" ng-class=\"{active:pane.selected}\">\n      <a href=\"\" ng-click=\"select(pane)\">{{pane.title}}</a>\n    </li>\n  </ul>\n  <div class=\"tab-content\" ng-transclude></div>\n</div>",
      replace: true
    };
  });

  viewMod.directive('pane', function() {
    return {
      require: '^tabs',
      restrict: 'E',
      transclude: true,
      scope: {
        title: '@'
      },
      link: function(scope, element, attrs, tabsCtrl) {
        return tabsCtrl.addPane(scope);
      },
      template: '<div class="tab-pane" ng-class="{active: selected}" ng-transclude>' + '</div>',
      replace: true
    };
  });

}).call(this);
